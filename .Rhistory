library(stringr)
library(rMaps)
make_map <- function(parks, subset = TRUE) {
# Returns a map centered on Edinburgh with the parks selected
# by subset plotted on.
map <- Leaflet$new()
map$setView(c(55.95, -3.15), zoom = 11)
map$tileLayer(provider = 'MapQuestOpen.OSM')
for (park in (1:nrow(parks))[subset]) {
map$marker(
c(parks$location_x[park], parks$location_y[park]),
bindPopup = parks$Name[park]
)
}
return(map)
}
find_facility <- function(facility){
grepl(facility,
parks$Facilities ,
ignore.case=TRUE)
}
options <- c('Seating', 'Play', 'Football', 'Walk',
'Natural Heritage Service', 'Woodland', 'Wildlife',
'Garden', 'Interpretation Panels', 'Picnic', 'Playing Fields',
'Toilet', 'Ball Court', 'Car Park', 'Grassed Areas',
'Cricket', 'Skateboard', 'BMX', 'Views', 'Floral Displays',
'Monument', 'Games Area', 'River', 'Rugby', 'Teenage', 'Pond',
'Allotments', 'Bike', 'Cycle', 'Cafe', 'Orienteering')
library(shiny)
source(helpers)
source('helpers.R')
load('park_data.RData')
make_map(parks)
make_map(parks, find_features('walk'))
make_map(parks, find_feature('walk'))
make_map(parks, find_facility('walk'))
shiny::runApp()
shiny::runApp()
make_map(parks, find_facility('guided walk'))
make_map(parks)
make_map(parks, find_facility('pond'))
make_map(parks, find_facility('river'))
install_github("rstudio/leaflet")
devtools::install_github("rstudio/leaflet")
load('park_data.RData')
library(leaflet)
load('park_data.RData')
m <- leaflet() %>%
addTiles()
m  # Print the map
m <- addMarkers(lng=parks$location_x[park], lat=parks$location_y[park]), popup=parks$name[park])
for (park in (1:nrow(parks))[subset]) {
m <- addMarkers(lng=parks$location_x[park],
lat=parks$location_y[park],
popup=parks$name[park])
}
m
for (park in (1:nrow(parks))) {
m <- addMarkers(lng=parks$location_x[park],
lat=parks$location_y[park],
popup=parks$name[park])
}
m
for (park in (1:nrow(parks))) {
m <- addMarkers(m,
lng=parks$location_x[park],
lat=parks$location_y[park],
popup=parks$name[park])
}
m  # Print the map
for (park in (1:nrow(parks))) {
m <- addMarkers(m,
lng=parks$location_y[park],
lat=parks$location_x[park],
popup=parks$name[park])
}
m  # Print the map
m <- leaflet() %>%
addTiles()
for (park in (1:nrow(parks))) {
m <- addMarkers(m,
lng=parks$location_y[park],
lat=parks$location_x[park],
popup=parks$name[park])
}
m  # Print the map
find_facility <- function(facility){
grepl(facility,
parks$Facilities ,
ignore.case=TRUE)
}
options <- c('Seating', 'Play', 'Football', 'Walk',
'Natural Heritage Service', 'Woodland', 'Wildlife',
'Garden', 'Interpretation Panels', 'Picnic', 'Playing Fields',
'Toilet', 'Ball Court', 'Car Park', 'Grassed Areas',
'Cricket', 'Skateboard', 'BMX', 'Views', 'Floral Displays',
'Monument', 'Games Area', 'River', 'Rugby', 'Teenage', 'Pond',
'Allotments', 'Bike', 'Cycle', 'Cafe', 'Orienteering')
find_facility('football')
m <- leaflet() %>%
addTiles()
subset <- find_facility('football')
for (park in (1:nrow(parks))[subset]) {
m <- addMarkers(m,
lng=parks$location_y[park],
lat=parks$location_x[park],
popup=parks$name[park])
}
m
?addMarkers
all <- rep(TRUE, nrow(parks))
m <- leaflet() %>%
addTiles()
all <- rep(TRUE, nrow(parks))
subset <- find_facility('football')
plotted_parks <- parks[subset,]
m <- addMarkers(m,
lng=parks$location_y,
lat=parks$location_x,
popup=parks$name)
m
m <- addMarkers(m,
lng=plotted_parks$location_y,
lat=plotted_parks$location_x,
popup=plotted_parks$name)
m
plotted_parks <- parks[subset,]
m <- addMarkers(m,
lng=plotted_parks$location_y,
lat=plotted_parks$location_x,
popup=plotted_parks$name)
m
dim(plotted_parks)
m <- leaflet() %>%
addTiles()
lng=plotted_parks$location_y,
m <- addMarkers(m,
lng=plotted_parks$location_y,
lat=plotted_parks$location_x,
popup=plotted_parks$name)
m
make_map <- function(subset = NULL){
if (is.null(subset)){
subset <- rep(TRUE, nrow(parks))
}
plotted_parks <- parks[subset,]
m <- leaflet() %>%
addTiles()
m <- addMarkers(m,
lng=plotted_parks$location_y,
lat=plotted_parks$location_x,
popup=plotted_parks$name)
return(m)
}
library(shiny)
library(shiney)
install.packages('shiny')
library(shiny)
??shiny
shiny()
?shiny
